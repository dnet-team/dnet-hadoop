<?xml version="1.0" encoding="UTF-8"?>
<plugin>
  <name>dhp-build-properties-maven-plugin</name>
  <description></description>
  <groupId>eu.dnetlib.dhp</groupId>
  <artifactId>dhp-build-properties-maven-plugin</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <goalPrefix>dhp-build-properties</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>generate-properties</goal>
      <description>Generates oozie properties which were not provided from commandline.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>eu.dnetlib.maven.plugin.properties.GenerateOoziePropertiesMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters/>
    </mojo>
    <mojo>
      <goal>write-project-properties</goal>
      <description>Writes project properties for the keys listed in specified properties files.
Based on: 
http://site.kuali.org/maven/plugins/properties-maven-plugin/1.3.2/write-project-properties-mojo.html</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>eu.dnetlib.maven.plugin.properties.WritePredefinedProjectProperties</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>properties.escapeChars</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of characters to escape when writing property values. cr=carriage return, lf=linefeed,
tab=tab. Any other values are taken literally.</description>
        </parameter>
        <parameter>
          <name>properties.exclude</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated set of properties to exclude when writing the properties file</description>
        </parameter>
        <parameter>
          <name>properties.include</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated set of properties to write to the properties file. If provided, only the properties matching
those supplied here will be written to the properties file.</description>
        </parameter>
        <parameter>
          <name>properties.includeEnvironmentVariables</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If true, the plugin will include environment variables when writing the properties file. Environment variables
are prefixed with &quot;env&quot;. Environment variables override project properties.</description>
        </parameter>
        <parameter>
          <name>properties.includePropertyKeysFromFiles</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>properties.includeSystemProperties</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If true, the plugin will include system properties when writing the properties file. System properties override
both environment variables and project properties.</description>
        </parameter>
        <parameter>
          <name>properties.outputFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The file that properties will be written to</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>properties.quiet</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If true, the plugin will silently ignore any non-existent properties files, and the build will continue</description>
        </parameter>
      </parameters>
      <configuration>
        <properties.escapeChars implementation="java.lang.String" default-value="cr,lf,tab"/>
        <properties.includeEnvironmentVariables implementation="boolean" default-value="false"/>
        <properties.includeSystemProperties implementation="boolean" default-value="false"/>
        <properties.outputFile implementation="java.io.File" default-value="${project.build.directory}/properties/project.properties"/>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <properties.quiet implementation="boolean" default-value="true"/>
      </configuration>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-profile</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact-manager</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-provider-api</artifactId>
      <type>jar</type>
      <version>1.0-alpha-5</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>1.0.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-container-default</artifactId>
      <type>jar</type>
      <version>1.0-alpha-8</version>
    </dependency>
    <dependency>
      <groupId>classworlds</groupId>
      <artifactId>classworlds</artifactId>
      <type>jar</type>
      <version>1.1-alpha-2</version>
    </dependency>
    <dependency>
      <groupId>org.kuali.maven.plugins</groupId>
      <artifactId>properties-maven-plugin</artifactId>
      <type>jar</type>
      <version>1.3.2</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <type>jar</type>
      <version>3.1.1.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-asm</artifactId>
      <type>jar</type>
      <version>3.1.1.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.jasypt</groupId>
      <artifactId>jasypt</artifactId>
      <type>jar</type>
      <version>1.9.0</version>
    </dependency>
    <dependency>
      <groupId>org.kuali.maven.common</groupId>
      <artifactId>maven-kuali-common</artifactId>
      <type>jar</type>
      <version>1.2.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant</artifactId>
      <type>jar</type>
      <version>1.8.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant-launcher</artifactId>
      <type>jar</type>
      <version>1.8.2</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-interpolation</artifactId>
      <type>jar</type>
      <version>1.15</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <type>jar</type>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <type>jar</type>
      <version>2.5</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <type>jar</type>
      <version>1.6.4</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <type>jar</type>
      <version>1.7.22</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <type>jar</type>
      <version>1.7.22</version>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <type>jar</type>
      <version>1.2.17</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <type>jar</type>
      <version>3.1.0</version>
    </dependency>
  </dependencies>
</plugin>